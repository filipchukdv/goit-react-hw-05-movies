{"version":3,"file":"static/js/979.8dccdcf0.chunk.js","mappings":"0UAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cACE,6NAEK,IAAMC,EAAgB,WAC3B,OAAOD,EAAAA,EAAAA,IAAU,uBAAuBE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,GACtD,EAEYC,EAAa,SAAAC,GACxB,OAAON,EAAAA,EAAAA,IACA,eAAgB,CACnBO,OAAQ,CACND,MAAAA,KAGHJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,GACjB,EAEYI,EAAa,SAAAC,GACxB,OAAOT,EAAAA,EAAAA,IAAA,gBAAmBS,IAAMP,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,GAC9C,EAEYM,EAAe,SAAAD,GAC1B,OAAOT,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,aAAiCP,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,GACtD,EAEYO,EAAe,SAAAF,GAC1B,OAAOT,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,aAAiCP,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,GACtD,C,yGCUD,UApCgB,SAAAQ,GACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,uGACyBP,EAAAA,EAAAA,cAAaE,GADtC,OACQV,EADR,OAGQgB,EACwB,IAA5BhB,EAASa,QAAQI,OACb,CAAC,CAAEX,GAAI,EAAGY,OAAQ,GAAIC,QAAS,eAC/BnB,EAASa,QACfC,EAAWE,GAPb,4CADc,uBAAC,WAAD,wBAUdI,EACD,GAAE,CAACV,KAGF,iCACE,oCACCG,GACC,wBACGA,EAAQQ,KAAI,SAAAC,GAAM,OACjB,2BACE,wBAAKA,EAAOJ,UACZ,yBAAMI,EAAOH,YAFNG,EAAOhB,GADC,OAQrB,0CAIP,C","sources":["api/index.js","pages/Movies/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0Mjg4MTliMjUyOTAxOTkxMWIzMjg4MTRkYjI1MmQ4YSIsInN1YiI6IjY0NWI3NmVhNmFhOGUwMDE3MzgxYThlNyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.u-ISzx_Hinkash-iFun779963DCpn6SaHRZhNpXKq9A';\n\nexport const fetchTrending = () => {\n  return axios.get('trending/movie/week').then(response => response.data);\n};\n\nexport const fetchQuery = query => {\n  return axios\n    .get('search/movie', {\n      params: {\n        query,\n      },\n    })\n    .then(response => response.data);\n};\n\nexport const fetchMovie = id => {\n  return axios.get(`movie/${id}`).then(response => response.data);\n};\n\nexport const fetchCredits = id => {\n  return axios.get(`movie/${id}/credits`).then(response => response.data);\n};\n\nexport const fetchReviews = id => {\n  return axios.get(`movie/${id}/reviews`).then(response => response.data);\n};\n","import { fetchReviews } from 'api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = props => {\n  const { movieId } = useParams();\n  const [results, setResults] = useState(null);\n\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetchReviews(movieId);\n\n      const normalizedResponse =\n        response.results.length === 0\n          ? [{ id: 1, author: '', content: 'No reviews' }]\n          : response.results;\n      setResults(normalizedResponse);\n    }\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <>\n      <h2>Reviews</h2>\n      {results ? (\n        <ul>\n          {results.map(result => (\n            <li key={result.id}>\n              <h3>{result.author}</h3>\n              <div>{result.content}</div>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <div>No reviews</div>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","fetchTrending","then","response","data","fetchQuery","query","params","fetchMovie","id","fetchCredits","fetchReviews","props","movieId","useParams","useState","results","setResults","useEffect","normalizedResponse","length","author","content","fetchData","map","result"],"sourceRoot":""}